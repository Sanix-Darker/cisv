name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: read
env:
  VERSION: ${{ github.ref_name }}
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [amd64, arm64]
        include:
          - os: ubuntu-latest
            pkg_os: ubuntu
            pkg_type: deb

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Only check out necessary files
          sparse-checkout: |
            cisv/
            LICENSE
            README.md
            Makefile
            package.json
            binding.gyp
          sparse-checkout-cone-mode: false

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.x'

      - name: Install build dependencies
        shell: bash
        run: |
          npm install -g node-gyp node-addon-api
          npm install

      - name: Build CLI binary
        shell: bash
        run: |
          OS_NAME=$(echo "${{ matrix.os }}" | sed 's/-latest//')
          ARCH="${{ matrix.arch }}"
          EXT=""

          # Build cisv with version info
          npm install -g node-gyp
          make clean
          make build
          CFLAGS="-DCISV_VERSION=\"${VERSION}\" -O3 -march=native" make cli

          OUTPUT="cisv-${{ matrix.pkg_os }}-${ARCH}${EXT}"
          mv cisv_bin "$OUTPUT"
          echo "OUTPUT_FILE=$OUTPUT" >> $GITHUB_ENV

      - name: Build Node.js addon
        shell: bash
        run: |
          npm run build
          ADDON_OUTPUT="cisv-node-${{ matrix.pkg_os }}-${VERSION}${ARCH}.node"
          cp build/Release/cisv.node "$ADDON_OUTPUT"
          echo "ADDON_FILE=$ADDON_OUTPUT" >> $GITHUB_ENV

      - name: Create minimal package
        shell: bash
        run: |
          # Create directory structure
          mkdir -p cisv-package/cisv
          mkdir -p cisv-package/bin

          # Copy only necessary files
          cp -r cisv/* cisv-package/cisv/
          cp LICENSE cisv-package/
          cp README.md cisv-package/
          cp "$OUTPUT_FILE" cisv-package/bin/cisv

          # Create tarball
          tar czf cisv-minimal-${{ matrix.pkg_os }}-${{ matrix.arch }}.tar.gz -C cisv-package .
          echo "MINIMAL_PACKAGE=cisv-minimal-${{ matrix.pkg_os }}-${{ matrix.arch }}.tar.gz" >> $GITHUB_ENV

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            ${{ env.OUTPUT_FILE }}
            ${{ env.ADDON_FILE }}
            ${{ env.MINIMAL_PACKAGE }}
          generate_release_notes: true

  publish-npm:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            cisv/
            LICENSE
            README.md
            package.json
            binding.gyp
            index.d.ts
            types/
            build/Release/cisv.node
            benchmark/
            fixtures/data.csv
          sparse-checkout-cone-mode: false

      - uses: actions/setup-node@v3
        with:
          node-version: '23.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Prepare npm package
        run: |
          # Create clean package structure
          mkdir -p pkg
          cp -r cisv benchmark fixtures/data.csv LICENSE README.md package.json binding.gyp index.d.ts types/ pkg/

          # Update package version
          cd pkg
          npm version ${VERSION#v} --no-git-tag-version
          cd ..

      - name: Build and test
        run: |
          npm install
          npm run build

      - name: Publish to npm
        run: |
          cd pkg
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
